<html>
<head>
</head>
<body>
  <h1>
import paho.mqtt.client as mqtt
import time
from time import sleep
import pyodbc
import paho.mqtt.subscribe as subscribe


def on_connect(mqttc, userdata, flags, rc):
    if rc == 0:
        print("connected OK")
    else:
        print("Bad connection Returned code=", rc)


def on_disconnect(mqttc, userdata, flags, rc=0):
    print(str(rc)+"\n")


def on_subscribe(mqttc, userdata, mid, granted_qos):
    print("subscribed: " + str(mid) + " " + str(granted_qos))


def on_message(mqttc, userdata, msg):
    print(str(msg.payload.decode("utf-8")))


# 새로운 클라이언트 생성
mqttc = mqtt.Client()

# 콜백 함수 설정 on_connect(브로커에 접속), on_disconnect(브로커에 접속중료), on_subscribe(topic 구독),
# on_message(발행된 메세지가 들어왔을 때)
mqttc.on_connect = on_connect
mqttc.on_disconnect = on_disconnect
mqttc.on_subscribe = on_subscribe
mqttc.on_message = on_message

#브로커 연결 설정
url="117.17.189.15"
port = 1883
username = "mq1"
password = "pass1"
topic = "Computer_Data"  ###토픽확인하기!

#클라이언트 설정
mqttc.username_pw_set(username,password)

#브로커와 연결 시도
mqttc.connect(host=url, port=port)

# topic : tpl 로 발행되는 메세지를 QoS 0로 구독
mqttc.subscribe('Comoputer_Data',0)

while True:

    msg=subscribe.simple(topic, hostname=url)
    mqttc.on_message
    testdata = str(msg.payload.decode("utf-8"))
    print(testdata)
    sleep(1)
</h1>
</body>
</html>
